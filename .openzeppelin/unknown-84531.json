{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0e7525245FFFf83450a51326EAbA5340aCEa26BF",
    "txHash": "0x19efc923ab198b68d4507f333b67b3ddc1cbfc19d339b0635cb6466ef653d88d"
  },
  "proxies": [
    {
      "address": "0x9Cfef27aC2Bed8689B89De0Ad7B30B02f5F45f9A",
      "txHash": "0x2226e7cb7ccb76df1e74bdcbc86f28f26b2a1c12d7aba8b426e679facb30eb4f",
      "kind": "transparent"
    },
    {
      "address": "0xBda84108e0Ac1C28610A06F9E120ca31Fe5Cf840",
      "txHash": "0x8aa29bce2cd505a8b674cf8f587c374b96deb9db9c5dc8f0fd9c98a6028ab146",
      "kind": "transparent"
    },
    {
      "address": "0x055dc09823912BEAd78A5E52c8b56A30CE710a2c",
      "txHash": "0xcaa0c3ddf6bdce34baf9e7e0f4aa2cc0b6e1c768abb640258380f445f487d493",
      "kind": "transparent"
    }
  ],
  "impls": {
    "202ae5d1f2091045106de3c726b84ff5b1fdaf1ce7e9d76b2969c3896127dba1": {
      "address": "0x76C28CE31aa14D5380D18830e1e46E51a00a7e6f",
      "txHash": "0x8aba47262c36ae896ca919c4129c6768cf07d5bf39542978ada60067ee5144b2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_underlyingToken",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:12"
          },
          {
            "label": "_feeTo",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:13"
          },
          {
            "label": "_totalLocked",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:14"
          },
          {
            "label": "_whitelist",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:15"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:16"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:18"
          },
          {
            "label": "_unlockAt",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:19"
          },
          {
            "label": "_minUnlockHeights",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "151c847734a526081f6d5e8988c8970bb2410fce58e735dc8553654d6eb327a6": {
      "address": "0xe7e8ccF9D8E87Bb3C1E36C8e1dc491b13eccaFC8",
      "txHash": "0x3399245f63f3a45101e224e0b3717bee8ee4676763bd3373ebba33b395c50203",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:14"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:15"
          },
          {
            "label": "_epoch",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:17"
          },
          {
            "label": "_sumNpmDeposits",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:18"
          },
          {
            "label": "_sumNpmWithdrawals",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:19"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:21"
          },
          {
            "label": "_validPools",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:22"
          },
          {
            "label": "_activePools",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:23"
          },
          {
            "label": "_emissionsPerBlock",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:24"
          },
          {
            "label": "_guageAllocations",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:25"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_struct(PoolSetupArgs)8938_storage)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "112",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PoolSetupArgs)8938_storage)": {
            "label": "mapping(bytes32 => struct IGaugeControllerRegistry.PoolSetupArgs)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolSetupArgs)8938_storage": {
            "label": "struct IGaugeControllerRegistry.PoolSetupArgs",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "platformFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "staking",
                "type": "t_struct(StakingArgs)8928_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(StakingArgs)8928_storage": {
            "label": "struct IGaugeControllerRegistry.StakingArgs",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockupPeriodInBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ratio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b3cb182714d5651ab98fe83c871905d5e9989c693ddb479cc7f99571c8ca445": {
      "address": "0xeCFFBe9b40B5F5DC8ECEA02cdE7529d9022150a9",
      "txHash": "0x88fcb2bd248ccd747039e29078dae3c9999588c50695fa184169b7b1c71b9d11",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_veToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:10"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:11"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:12"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:13"
          },
          {
            "label": "_totalVotingPower",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:15"
          },
          {
            "label": "_myVotingPower",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:17"
          },
          {
            "label": "_poolStakedByEveryone",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:19"
          },
          {
            "label": "_poolLastRewardHeights",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:21"
          },
          {
            "label": "_poolStakedByMe",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:22"
          },
          {
            "label": "_canWithdrawFrom",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:23"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "10",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "10",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "61",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "112",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "161",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "162",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}

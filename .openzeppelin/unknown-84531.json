{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0e7525245FFFf83450a51326EAbA5340aCEa26BF",
    "txHash": "0x19efc923ab198b68d4507f333b67b3ddc1cbfc19d339b0635cb6466ef653d88d"
  },
  "proxies": [
    {
      "address": "0x9Cfef27aC2Bed8689B89De0Ad7B30B02f5F45f9A",
      "txHash": "0x2226e7cb7ccb76df1e74bdcbc86f28f26b2a1c12d7aba8b426e679facb30eb4f",
      "kind": "transparent"
    },
    {
      "address": "0xBda84108e0Ac1C28610A06F9E120ca31Fe5Cf840",
      "txHash": "0x8aa29bce2cd505a8b674cf8f587c374b96deb9db9c5dc8f0fd9c98a6028ab146",
      "kind": "transparent"
    },
    {
      "address": "0x055dc09823912BEAd78A5E52c8b56A30CE710a2c",
      "txHash": "0xcaa0c3ddf6bdce34baf9e7e0f4aa2cc0b6e1c768abb640258380f445f487d493",
      "kind": "transparent"
    },
    {
      "address": "0xfb37e57C8D427131EC12Fff133a56B9D72f797C4",
      "txHash": "0x3ba3fbd04a6a00e0532617dc1d01a8294ed8d7abbdcada1fab084e9ed432ef1e",
      "kind": "transparent"
    },
    {
      "address": "0x2D1315F447FAe7Ea7D64290E503caED1B1e78F47",
      "txHash": "0xf2a9c8a5e2e3d5fb7572023a893003cb7aea3f4866b8fa30d5bd86e154d4d0b4",
      "kind": "transparent"
    },
    {
      "address": "0xCFC62F0a3D8afDCb4a82007640042c2A50426823",
      "txHash": "0x59096c22a5c09416443fc86432adffac3181df57102e7e21cdf05665b0998566",
      "kind": "transparent"
    },
    {
      "address": "0x68a3bD2A41B8EeDe550fE4166174F90C64Cd4DAA",
      "txHash": "0xa7a86cf327cd053fff40912db5f435d48067ef2e5929a3a9454ff0f56e334351",
      "kind": "transparent"
    },
    {
      "address": "0x435D20D21ea8ae4Ea92b2FB532317E9E1E9176bC",
      "txHash": "0xa15922b602bdddf72923baaf08eeed2200a40a00457da0bf8d1e2322752dcbef",
      "kind": "transparent"
    },
    {
      "address": "0x10382396a33d6fA69a8aED2eF3B0491Ea12a0dD4",
      "txHash": "0xdccbfe9525d443b063d6e642e1a22530a6951af20862d4f65a7aae50df4c42e1",
      "kind": "transparent"
    },
    {
      "address": "0x6A9c1bb998669B16f4975c968b86c02fB95Ef0d1",
      "txHash": "0x9b403e8ad64a50654d05ecdb1d9620dfadf230c94e842d28e5c1fbb5a1c7c6cf",
      "kind": "transparent"
    },
    {
      "address": "0xe659Af2671793E00878F2Ab7c52757609cECF14c",
      "txHash": "0x072533ae993c033e8916e1dd98240f8f71545a39b73b23719d1cb985aa3f46ba",
      "kind": "transparent"
    },
    {
      "address": "0xE1aBC8041C0966854F73fd9e1450414E5A6C1a87",
      "txHash": "0xeac76f9158277c9ca34267ed3cef3ac86b0f09318e23c3fbda88314d73be2d78",
      "kind": "transparent"
    },
    {
      "address": "0x2D4062dc0319180F012470a4b570f4291c668364",
      "txHash": "0x172c8a12949c9c9a78ab1348620423681b76140b88af3aca0f6eca32a6371337",
      "kind": "transparent"
    },
    {
      "address": "0x2A2e0efE94Ab54FB473644F5b530F7070cC51937",
      "txHash": "0x06301814be7a3ca9bc3a7e4cde8426ff82c93f724777a0399e702ad820f1dfc9",
      "kind": "transparent"
    },
    {
      "address": "0xd328822B75aEe344b240B7355Db5aF11e1541db6",
      "txHash": "0xd57eabc2a1b49ba70314a50d903691de50fd44b40cf901e321a9d58378e40ada",
      "kind": "transparent"
    },
    {
      "address": "0x71F46Cb7401206a5a603a5bcE5b43372e1204bD8",
      "txHash": "0xacd09988ddaf062d58d13cf148f13bd7aeff7e43fb37261e8dd4db86e854da20",
      "kind": "transparent"
    },
    {
      "address": "0x0C84eaE9d1b4Cc8397FC5209733FECaF9f3b0CD4",
      "txHash": "0x8e95fae8f41e9ba2fea48376232a6501d3863fe37e6dea499b4766cbfc314379",
      "kind": "transparent"
    },
    {
      "address": "0x4fa67829Bbc8314b0bc4047D62bf3C4e52EdCCF5",
      "txHash": "0x84eb139e1576f35eba4be5a4b2a15977753af568bdfb05a04601f965febc2ff0",
      "kind": "transparent"
    },
    {
      "address": "0xd8511fDC59e572bD42D7a53073914dd3aBba0d98",
      "txHash": "0x4dc5595d81ef7d47202a36cd063bed47230d3fefae3ecb072f62ba1cd5cf66be",
      "kind": "transparent"
    },
    {
      "address": "0xd673f97cA6DC3f807E0EAA9d0271b165C2A6d657",
      "txHash": "0xe2943fe72e18b2c741d198c4de557a4c77b80bcfdb7b481cc9e7de0b90224778",
      "kind": "transparent"
    },
    {
      "address": "0xbF7176F75B73DF752F52f429AF853A5f7edBb1FA",
      "txHash": "0xb55f4cd718f52df46cea280fff6548faa471f769492480d390cdd741e18c011d",
      "kind": "transparent"
    },
    {
      "address": "0x0866f9927d94a5D7072E91DcF77E407099170Bf5",
      "txHash": "0x8f39ed6bd63a320e6fb8fb3f81da767f126f5173d0d713c6dc6d35ef32b4180a",
      "kind": "transparent"
    },
    {
      "address": "0xdEF8C3776D3509fc11AD54839e1D8A146eD973cC",
      "txHash": "0xfd1fea236a94b7482edf0e10dae21756b7d8b195e16ece7a903266d404ab0912",
      "kind": "transparent"
    },
    {
      "address": "0xFB75E68C107F715541FA8c356e51075235223A0b",
      "txHash": "0xfaafc8c67c4b5c589aa3822a4bac286d18810141f34893875d0246f073df51c3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "202ae5d1f2091045106de3c726b84ff5b1fdaf1ce7e9d76b2969c3896127dba1": {
      "address": "0x76C28CE31aa14D5380D18830e1e46E51a00a7e6f",
      "txHash": "0x8aba47262c36ae896ca919c4129c6768cf07d5bf39542978ada60067ee5144b2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_underlyingToken",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:12"
          },
          {
            "label": "_feeTo",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:13"
          },
          {
            "label": "_totalLocked",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:14"
          },
          {
            "label": "_whitelist",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:15"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:16"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:18"
          },
          {
            "label": "_unlockAt",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:19"
          },
          {
            "label": "_minUnlockHeights",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VoteEscrowTokenState",
            "src": "src/escrow/VoteEscrowTokenState.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "151c847734a526081f6d5e8988c8970bb2410fce58e735dc8553654d6eb327a6": {
      "address": "0xe7e8ccF9D8E87Bb3C1E36C8e1dc491b13eccaFC8",
      "txHash": "0x3399245f63f3a45101e224e0b3717bee8ee4676763bd3373ebba33b395c50203",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:14"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:15"
          },
          {
            "label": "_epoch",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:17"
          },
          {
            "label": "_sumNpmDeposits",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:18"
          },
          {
            "label": "_sumNpmWithdrawals",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:19"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:21"
          },
          {
            "label": "_validPools",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:22"
          },
          {
            "label": "_activePools",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:23"
          },
          {
            "label": "_emissionsPerBlock",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:24"
          },
          {
            "label": "_guageAllocations",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:25"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_struct(PoolSetupArgs)8938_storage)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "112",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PoolSetupArgs)8938_storage)": {
            "label": "mapping(bytes32 => struct IGaugeControllerRegistry.PoolSetupArgs)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolSetupArgs)8938_storage": {
            "label": "struct IGaugeControllerRegistry.PoolSetupArgs",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "platformFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "staking",
                "type": "t_struct(StakingArgs)8928_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(StakingArgs)8928_storage": {
            "label": "struct IGaugeControllerRegistry.StakingArgs",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockupPeriodInBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ratio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b3cb182714d5651ab98fe83c871905d5e9989c693ddb479cc7f99571c8ca445": {
      "address": "0xeCFFBe9b40B5F5DC8ECEA02cdE7529d9022150a9",
      "txHash": "0x88fcb2bd248ccd747039e29078dae3c9999588c50695fa184169b7b1c71b9d11",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_veToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:10"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:11"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:12"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:13"
          },
          {
            "label": "_totalVotingPower",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:15"
          },
          {
            "label": "_myVotingPower",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:17"
          },
          {
            "label": "_poolStakedByEveryone",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:19"
          },
          {
            "label": "_poolLastRewardHeights",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:21"
          },
          {
            "label": "_poolStakedByMe",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:22"
          },
          {
            "label": "_canWithdrawFrom",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:23"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "10",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "10",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "61",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "112",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "161",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "162",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c37aff9beecce02c39fb86b820f01b7bcc8a586fec5bed6b8239ce023e44a356": {
      "address": "0xfA0979871935f579B2fdA9692736293c5f32D406",
      "txHash": "0x9275e36a4df4688e42216f539570a2213a981d6ef8e380839777d920b440ff12",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:18"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:19"
          },
          {
            "label": "_epoch",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:21"
          },
          {
            "label": "_sumNpmDeposits",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:22"
          },
          {
            "label": "_sumNpmWithdrawals",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:23"
          },
          {
            "label": "_validPools",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:25"
          },
          {
            "label": "_activePools",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:26"
          },
          {
            "label": "_emissionsPerBlock",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:27"
          },
          {
            "label": "_guageAllocations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:28"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_bytes32,t_struct(PoolSetupArgs)14493_storage)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PoolSetupArgs)14493_storage)": {
            "label": "mapping(bytes32 => struct IGaugeControllerRegistry.PoolSetupArgs)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolSetupArgs)14493_storage": {
            "label": "struct IGaugeControllerRegistry.PoolSetupArgs",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "platformFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "staking",
                "type": "t_struct(StakingArgs)14483_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingArgs)14483_storage": {
            "label": "struct IGaugeControllerRegistry.StakingArgs",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockupPeriodInBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ratio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "72730ee6d570884c3a4b4799afbd135535061afdca665f7f3aaf47d9b2b86f58": {
      "address": "0x2AdD88979FAdf8298Efe9bcC62C45D6150B59a53",
      "txHash": "0xaf634a4b189f6d5adbe2dd6ff82da9790d30ae000bdb969b8e7e375934d7e1e4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(RoyaltyInfo)3501_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3501_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:19"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:20"
          },
          {
            "label": "_soulbound",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3501_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)3501_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "7cc3232adee9a4a2c70cb7ec00e23723ef6dbb12081c9fb0275d558e323d1b80": {
      "address": "0xea5D60B1D02c10BD4214A790481347c6478543F9",
      "txHash": "0x17baba2a4de137ebea62ab37b8bf9e71317cdd08e9f74384dce875d74443e862",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(INeptuneLegends)12336",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:17"
          },
          {
            "label": "_merkleRoot",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:19"
          },
          {
            "label": "souls",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:21"
          },
          {
            "label": "_personas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_uint8))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:24"
          },
          {
            "label": "_mintStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_bool))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:27"
          },
          {
            "label": "_boundaries",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)12178_storage))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)12336": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(address => mapping(uint8 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_uint8))": {
            "label": "mapping(address => mapping(uint8 => uint8))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Boundary)12178_storage)": {
            "label": "mapping(bytes32 => struct IMerkleProofMinter.Boundary)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)12178_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => struct IMerkleProofMinter.Boundary))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint8)": {
            "label": "mapping(uint8 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(Boundary)12178_storage": {
            "label": "struct IMerkleProofMinter.Boundary",
            "members": [
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "42bef1b313b5e17cfc6de0a683fbd8435873e79183a8a6e41c430e466e87a0ce": {
      "address": "0x10e26b50327615cCf9e9C514229C8Ed705E72817",
      "txHash": "0x010ac5abd83ecf450d3f85f73e0dea3e6f02f4d4a503b8354e16102f8825bb19",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_s",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStore)2939",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:15"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INeptuneLegends)3526",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:16"
          },
          {
            "label": "_min",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:18"
          },
          {
            "label": "_max",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:19"
          },
          {
            "label": "_souls",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)3526": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_contract(IStore)2939": {
            "label": "contract IStore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "35b2a544c91769f02b0000c3490c6f1161586442e1d9c475af11682ce23db8cf": {
      "address": "0xC089799A0A1246d31bbF8c01Aba786D303c6afD2",
      "txHash": "0x3003c3bcd739444a51f45a36a1acc8e6cd0141b11f4c862e5357123c637441da",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(INeptuneLegends)12057",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:17"
          },
          {
            "label": "_merkleRoot",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:19"
          },
          {
            "label": "souls",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:21"
          },
          {
            "label": "_personas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_uint8))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:24"
          },
          {
            "label": "_mintStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_bool))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:27"
          },
          {
            "label": "_boundaries",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)11889_storage))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)12057": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(address => mapping(uint8 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_uint8))": {
            "label": "mapping(address => mapping(uint8 => uint8))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Boundary)11889_storage)": {
            "label": "mapping(bytes32 => struct IMerkleProofMinter.Boundary)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)11889_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => struct IMerkleProofMinter.Boundary))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint8)": {
            "label": "mapping(uint8 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(Boundary)11889_storage": {
            "label": "struct IMerkleProofMinter.Boundary",
            "members": [
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "33cf4eeba7ef8c832d21c80ef21d186ea3b868931c211bcbbe3b5e91d1c7a8f0": {
      "address": "0x60e9100DfA44c22aB220E86C8A2f477a71eC6A3b",
      "txHash": "0xd6519a450a15c19a57e8bef5fcb017cb2fa6df8ace60f10bf4bfe4c18b516ae2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_veToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:10"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:11"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:12"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:13"
          },
          {
            "label": "_totalVotingPower",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:15"
          },
          {
            "label": "_myVotingPower",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:17"
          },
          {
            "label": "_poolStakedByEveryone",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:19"
          },
          {
            "label": "_poolLastRewardHeights",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:21"
          },
          {
            "label": "_poolStakedByMe",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:22"
          },
          {
            "label": "_canWithdrawFrom",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:23"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "10",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "10",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "61",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "112",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "161",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "162",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "32aeef1f83e9965c66077f4829f4dbca7af696e579d19f8f11f5c62e9a54fced": {
      "address": "0xD07DB3CBCE39C4E6ae80ab0d569c7C88661D8c3c",
      "txHash": "0xeae0d7f73638146c21ed377bd9493d6a2685b2d2ef5346b6bcf63f18a0ba427e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:18"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:19"
          },
          {
            "label": "_epoch",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:21"
          },
          {
            "label": "_sumNpmDeposits",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:22"
          },
          {
            "label": "_sumNpmWithdrawals",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:23"
          },
          {
            "label": "_validPools",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:25"
          },
          {
            "label": "_activePools",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:26"
          },
          {
            "label": "_emissionsPerBlock",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:27"
          },
          {
            "label": "_guageAllocations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:28"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_bytes32,t_struct(PoolSetupArgs)15149_storage)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PoolSetupArgs)15149_storage)": {
            "label": "mapping(bytes32 => struct IGaugeControllerRegistry.PoolSetupArgs)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolSetupArgs)15149_storage": {
            "label": "struct IGaugeControllerRegistry.PoolSetupArgs",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "platformFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "staking",
                "type": "t_struct(StakingArgs)15139_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingArgs)15139_storage": {
            "label": "struct IGaugeControllerRegistry.StakingArgs",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockupPeriodInBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ratio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6d912ce43d344f4f1206bd616b455272b17721e362e99a6bf8d21320b3d217c1": {
      "address": "0xb600BA2D98068B84d5c7d556a4F929335B1cF62e",
      "txHash": "0x880bafa1778aec666169e2bf74184037e6b3a21401ee72b272cffc1e61c14191",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(INeptuneLegends)17411",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:17"
          },
          {
            "label": "_merkleRoot",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:19"
          },
          {
            "label": "souls",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:21"
          },
          {
            "label": "_personas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_uint8))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:24"
          },
          {
            "label": "_mintStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_bool))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:27"
          },
          {
            "label": "_boundaries",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)16064_storage))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)17411": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(address => mapping(uint8 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_uint8))": {
            "label": "mapping(address => mapping(uint8 => uint8))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Boundary)16064_storage)": {
            "label": "mapping(bytes32 => struct IMerkleProofMinter.Boundary)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)16064_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => struct IMerkleProofMinter.Boundary))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint8)": {
            "label": "mapping(uint8 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(Boundary)16064_storage": {
            "label": "struct IMerkleProofMinter.Boundary",
            "members": [
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "95d4d5314c3e88335b61973e3dd5acf5785e6e5ba1f859d1a409b5f80d9d4a49": {
      "address": "0xda29F7e08f6E5881b18B423057EC3E75938b839F",
      "txHash": "0x5869ac4af0c1a006db2938497ba5b9d4b946bfc23b6af0c505bc8ba337761672",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_s",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStore)8974",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:15"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INeptuneLegends)17411",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:16"
          },
          {
            "label": "_min",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:18"
          },
          {
            "label": "_max",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:19"
          },
          {
            "label": "_souls",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)17411": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_contract(IStore)8974": {
            "label": "contract IStore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a1e66214edec63a964d4d41c5169b5c1cf92f81c42bc6d1d7984572093101064": {
      "address": "0x7AF168a130Ac5D90b43CcD8460161d8bF41cbdfB",
      "txHash": "0x2ece5c1b5547ae565f10b96f5e260a745caca999846bbeeafe1fe0d20964062e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(RoyaltyInfo)2515_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2515_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:19"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:20"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:21"
          },
          {
            "label": "_soulbound",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2515_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2515_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "057942ab8933dc7a969adff520e9a164e15d06ab6b13833631ec964532d02ead": {
      "address": "0x679D449948ac11A2e192139b30574f5e808B067b",
      "txHash": "0x37ff5a540fa36f2effd5087d5b21ca1f6ad7720c5b75aa44177623ec2f7560c3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(INeptuneLegends)9023",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:17"
          },
          {
            "label": "_merkleRoot",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:19"
          },
          {
            "label": "souls",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:21"
          },
          {
            "label": "_personas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_uint8))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:24"
          },
          {
            "label": "_mintStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_bool))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:27"
          },
          {
            "label": "_boundaries",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)8216_storage))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)9023": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(address => mapping(uint8 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_uint8))": {
            "label": "mapping(address => mapping(uint8 => uint8))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Boundary)8216_storage)": {
            "label": "mapping(bytes32 => struct IMerkleProofMinter.Boundary)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)8216_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => struct IMerkleProofMinter.Boundary))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint8)": {
            "label": "mapping(uint8 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(Boundary)8216_storage": {
            "label": "struct IMerkleProofMinter.Boundary",
            "members": [
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab9c6cbcb0f23d8216c9afe11b5cabd93a2826611dae22ced31d22ac585fb627": {
      "address": "0x05Ce66025c643cE80672eb2132f01460dE278195",
      "txHash": "0x5ada0183bd1a70f7131f0bd67f1072a0b20971fcf1024aab78e1e5f05254117c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(RoyaltyInfo)3152_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3152_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:19"
          },
          {
            "label": "_pausers",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:21"
          },
          {
            "label": "_minted",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:22"
          },
          {
            "label": "_soulbound",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:23"
          },
          {
            "label": "_boundTokenId",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NeptuneLegendsState",
            "src": "src/nft/NeptuneLegendsState.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3152_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)3152_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "cf6eb0c9ffb007d861aabef7432df515464ee56a0f356f1aca3878a9b3e06a0e": {
      "address": "0xB4f749527Ba195E31763fBf8C388EB5510De1B6a",
      "txHash": "0x0c58f55285187e07eec6fc6582bc8462b63632f6878f211cbb7fec62b9f81335",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_s",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStore)8625",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:15"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INeptuneLegends)17353",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:16"
          },
          {
            "label": "_min",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:18"
          },
          {
            "label": "_max",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:19"
          },
          {
            "label": "_souls",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PolicyProofMinterState",
            "src": "src/nft-minter/policy/PolicyProofMinterState.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)17353": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_contract(IStore)8625": {
            "label": "contract IStore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a2ba9610cf2f1ab6ad004bfdd95a89addd4e28bc458b06587d528f4f0ee91283": {
      "address": "0x9bCF6854Ee16aE38D7bAb2E517F26e6fAfB86513",
      "txHash": "0x99ccfdd6d35b4ccc9f7782e76a986287ca748e3cd810d9a13c99b40c144e45d4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(INeptuneLegends)17353",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:17"
          },
          {
            "label": "_merkleRoot",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:19"
          },
          {
            "label": "souls",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:21"
          },
          {
            "label": "_personas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_uint8))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:24"
          },
          {
            "label": "_mintStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_bool))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:27"
          },
          {
            "label": "_boundaries",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)16054_storage))",
            "contract": "MerkleProofMinterState",
            "src": "src/nft-minter/merkle/MerkleProofMinterState.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(INeptuneLegends)17353": {
            "label": "contract INeptuneLegends",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(address => mapping(uint8 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_uint8))": {
            "label": "mapping(address => mapping(uint8 => uint8))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Boundary)16054_storage)": {
            "label": "mapping(bytes32 => struct IMerkleProofMinter.Boundary)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_struct(Boundary)16054_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => struct IMerkleProofMinter.Boundary))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint8)": {
            "label": "mapping(uint8 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(Boundary)16054_storage": {
            "label": "struct IMerkleProofMinter.Boundary",
            "members": [
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cb277050deeb030f2182329c63121a2ab211d50899e403e2f2ef4933a081f1de": {
      "address": "0x8b0E6d6eea015aE6f8a8D1dFFA935d951Fc9B5E2",
      "txHash": "0xfaf2a72dc51d5276014d08fff0203ad62619982adf5a6797fde2cfe709805d70",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:18"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:19"
          },
          {
            "label": "_epoch",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:21"
          },
          {
            "label": "_blocksPerEpoch",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:22"
          },
          {
            "label": "_sumNpmDeposits",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:23"
          },
          {
            "label": "_sumNpmWithdrawals",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:24"
          },
          {
            "label": "_validPools",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:26"
          },
          {
            "label": "_activePools",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:27"
          },
          {
            "label": "_emissionsPerBlock",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:28"
          },
          {
            "label": "_gaugeAllocations",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_bytes32,t_struct(PoolSetupArgs)15074_storage)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:31"
          },
          {
            "label": "_epochs",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_uint256,t_struct(Epoch)15084_storage)",
            "contract": "GaugeControllerRegistryState",
            "src": "src/gauge-registry/GaugeControllerRegistryState.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PoolSetupArgs)15074_storage)": {
            "label": "mapping(bytes32 => struct IGaugeControllerRegistry.PoolSetupArgs)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Epoch)15084_storage)": {
            "label": "mapping(uint256 => struct IGaugeControllerRegistry.Epoch)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Epoch)15084_storage": {
            "label": "struct IGaugeControllerRegistry.Epoch",
            "members": [
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolSetupArgs)15074_storage": {
            "label": "struct IGaugeControllerRegistry.PoolSetupArgs",
            "members": [
              {
                "label": "key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "platformFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "staking",
                "type": "t_struct(StakingArgs)15062_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingArgs)15062_storage": {
            "label": "struct IGaugeControllerRegistry.StakingArgs",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockupPeriodInBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ratio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "99470a59ebe0b0032611b72dce1d09b50fb5b391fe0f61bd56565ca4d3ef0214": {
      "address": "0xBe3d1aA3c030D16c196eEEB43F5B1e07DA208Aa7",
      "txHash": "0x9172336e0016fd96b9be631b125a2ee7e9c595636496e6f225e12bb688e96537",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_veToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:10"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:11"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:12"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:13"
          },
          {
            "label": "_totalVotingPower",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:15"
          },
          {
            "label": "_myVotingPower",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:17"
          },
          {
            "label": "_poolStakedByEveryone",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:19"
          },
          {
            "label": "_poolLastRewardHeights",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:21"
          },
          {
            "label": "_poolStakedByMe",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:22"
          },
          {
            "label": "_canWithdrawFrom",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "LiquidityGaugePoolState",
            "src": "src/gauge-pool/LiquidityGaugePoolState.sol:23"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "10",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "10",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "61",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "112",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "161",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "162",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
